#NEXUS
[R-package APE, Fri Jun 30 18:59:05 2023]

BEGIN TAXA;
	DIMENSIONS NTAX = 41;
	TAXLABELS
		Amiskwia_sagittiformis
		Cephalochordata_Branchiostoma
		Tunicata_Ciona
		Shankouclava_anningense_cs3
		Phlogites_longus_cs3
		Hemichordata_Gyaltsenglossus
		Hemichordata_Spartobranchus
		Hemichordata_Oesia
		Pterobranch_Rhabdopleura
		Pterobranch_Cephalodiscus
		Enteropneusta_Harrimaniidae_Saccoglossus
		Enteropneusta_Spengelidae_Glandiceps
		Herpetogaster_collinsi
		Rotadiscus_cs3
		Banffia_constricta_cs5
		Vetulicola_cuneata_cs3
		Beidazoon_venustum_cs3
		Vetulocystis_catenata_cs3
		Mitrate_Mitrocystella_incipiens_om
		Mitrate_Lagynocystis_pyramidalis_os2
		Mitrate_Jaekelocarpus_oklahomensis
		Ctenoimbricata_spinosa_cs5
		Ctenocystoid_Courtessolea_cs6-5
		Cinctan_Bohemiacinctus_havliceki_cs5
		Cornute_Ponticulocarpus_cs5
		Solute_Coleicarpus_sprinklei_cs6
		Solute_Castericystis_vali_cs6
		Helicocystis_moroccoensis_cs5
		Helicoplacus_cs3
		Eocrinoidea_Ubaghsicystis_cs5
		Eocrinoidea_Akadocrinus_cs6
		Eocrinoidea_Lyracystis_radiata_cs5
		Eocrinoidea_Rhombifera_Pleurocystites
		Edrioasteroidea_Stromatocystites_cs4-5
		Edrioasteroidea_Kailidiscus_chinensis_cs5
		Edrioasteroidea_Camptostroma_cs4
		Cornute?_Ceratocystis_perneri_cs5-4
		Eocrinoidea_Kinzercystis_cs4
		Eocrinoidea_Gogia_cs4
		Eocrinoidea_Rhombifera_Macrocystella_os1
		Crinoidea_Aethocrinus_os1
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Amiskwia_sagittiformis,
		2	Cephalochordata_Branchiostoma,
		3	Tunicata_Ciona,
		4	Shankouclava_anningense_cs3,
		5	Phlogites_longus_cs3,
		6	Hemichordata_Gyaltsenglossus,
		7	Hemichordata_Spartobranchus,
		8	Hemichordata_Oesia,
		9	Pterobranch_Rhabdopleura,
		10	Pterobranch_Cephalodiscus,
		11	Enteropneusta_Harrimaniidae_Saccoglossus,
		12	Enteropneusta_Spengelidae_Glandiceps,
		13	Herpetogaster_collinsi,
		14	Rotadiscus_cs3,
		15	Banffia_constricta_cs5,
		16	Vetulicola_cuneata_cs3,
		17	Beidazoon_venustum_cs3,
		18	Vetulocystis_catenata_cs3,
		19	Mitrate_Mitrocystella_incipiens_om,
		20	Mitrate_Lagynocystis_pyramidalis_os2,
		21	Mitrate_Jaekelocarpus_oklahomensis,
		22	Ctenoimbricata_spinosa_cs5,
		23	Ctenocystoid_Courtessolea_cs6-5,
		24	Cinctan_Bohemiacinctus_havliceki_cs5,
		25	Cornute_Ponticulocarpus_cs5,
		26	Solute_Coleicarpus_sprinklei_cs6,
		27	Solute_Castericystis_vali_cs6,
		28	Helicocystis_moroccoensis_cs5,
		29	Helicoplacus_cs3,
		30	Eocrinoidea_Ubaghsicystis_cs5,
		31	Eocrinoidea_Akadocrinus_cs6,
		32	Eocrinoidea_Lyracystis_radiata_cs5,
		33	Eocrinoidea_Rhombifera_Pleurocystites,
		34	Edrioasteroidea_Stromatocystites_cs4-5,
		35	Edrioasteroidea_Kailidiscus_chinensis_cs5,
		36	Edrioasteroidea_Camptostroma_cs4,
		37	Cornute?_Ceratocystis_perneri_cs5-4,
		38	Eocrinoidea_Kinzercystis_cs4,
		39	Eocrinoidea_Gogia_cs4,
		40	Eocrinoidea_Rhombifera_Macrocystella_os1,
		41	Crinoidea_Aethocrinus_os1
	;
	TREE * seed_1 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_1 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_2 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_3 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_4 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * start_5 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_6 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_7 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_8 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_9 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_10 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_11 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_12 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_13 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * start_14 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * start_15 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * start_16 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_17 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * start_18 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_19 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_20 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * start_21 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * start_22 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_23 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_24 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_25 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_26 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_27 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * start_28 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * start_29 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_30 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_31 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_32 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_33 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_34 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_35 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_36 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_37 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_38 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_39 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_40 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_41 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_42 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_43 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * start_44 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_45 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_46 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38)))),(19,((20,21),(25,37)))))));
	TREE * start_47 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_48 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_49 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_50 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * start_51 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_52 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_53 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_54 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_55 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * start_56 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * start_57 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * start_58 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch3_1 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(33,40)),31),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch3_2 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38)))),(19,((20,21),(25,37)))))));
	TREE * ratch3_3 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * ratch3_4 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,((7,(11,12)),8)),(9,10)))),((15,16),(17,(((18,((22,23),24)),((26,27),(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38)))),(19,((20,21),(25,37)))))));
	TREE * ratch3_5 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch3_6 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch3_7 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch3_8 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch3_9 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch3_10 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch3_11 = [&R] (((1,(2,(3,4))),((5,(13,14)),(6,(((7,(11,12)),8),(9,10))))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch3_12 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,(31,(33,40))),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch4_1 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch4_2 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch4_3 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,(33,40)),31),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch4_4 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),39),32),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch4_5 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch4_6 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch6_1 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),(26,(27,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))))),(19,((20,21),(25,37)))))));
	TREE * ratch6_2 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((((30,31),(33,40)),32),39),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch6_3 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),((((30,31),(33,40)),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
	TREE * ratch6_4 = [&R] (((1,(2,(3,4))),((5,(13,14)),((6,(9,10)),((7,(11,12)),8)))),((15,16),(17,(((18,((22,23),24)),((26,(((((28,29),35),(34,36)),41),(((30,(31,(33,40))),(32,39)),38))),27)),(19,((20,21),(25,37)))))));
END;
